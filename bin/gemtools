#!/usr/bin/env ruby
#
#  Created on 2008-8-2.
#  Copyright (c) 2008. All rights reserved.

require File.dirname(__FILE__) + '/../lib/gem_tools'

begin
  require 'rubygems'
rescue LoadError
  # no rubygems to load, so we fail silently
end

require 'optparse'

command = ARGV.first

OPTIONS = { }
MANDATORY_OPTIONS = %w( )

parser = OptionParser.new do |opts|
  opts.banner = <<BANNER
GemTools can be used to make sure you have the propper gems and versions for 
your app installed. It handles installing and loading gems during runtime.

Usage: #{File.basename($0)} command [options]

Commands are:

    install
    Install the gems in ./gems.yml or ./config/gems.yml

    dryrun 
    Print out the commands that would have been run

Options are:
BANNER
  opts.separator ""
  opts.on("-d", "--docs", String,
          "Install the rdocs and ri during install",
          "Default: off") { |opts| OPTIONS[:docs] }
  opts.on("-f", "--force", String,
          "Force the install of the gems",
          "Default: off") { |opts| OPTIONS[:force] }
  opts.on("-h", "--help",
          "Show this help message") { puts opts; exit }
  opts.parse!(ARGV)

  if MANDATORY_OPTIONS && MANDATORY_OPTIONS.find { |option| OPTIONS[option.to_sym].nil? }
    puts opts; exit
  end
  OPTS = opts
end

# do stuff
GemTools.run command
